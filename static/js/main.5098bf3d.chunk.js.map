{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","href","imdbID","MoviesList","movies","map","key","FindMovie","addMovie","useState","searchQuery","setSearchQuery","setMovie","error","setError","findMovie","a","title","fetch","then","response","json","catch","Error","newMovie","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setMovies","length","movieFromSearch","some","ReactDOM","render","document","getElementById"],"mappings":"6UAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKF,EAAMG,OACXC,IAAI,gBAIV,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJE,IAAI,WAIV,yBAAKH,UAAU,iBACb,uBAAGA,UAAU,cAAcD,EAAMK,SAIrC,yBAAKJ,UAAU,WACZD,EAAMM,KACP,6BACA,uBAAGC,KAAMP,EAAMQ,QAAf,aC1BKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKT,UAAU,UACZS,EAAOC,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAWY,IAAKZ,EAAMQ,OAAQR,MAAOA,S,uBCF9Ba,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBAClCC,EADkC,KACrBC,EADqB,OAEfF,mBAAS,MAFM,mBAElCf,EAFkC,KAE3BkB,EAF2B,OAGfH,oBAAS,GAHM,mBAGlCI,EAHkC,KAG3BC,EAH2B,KAYnCC,EAAS,uCAAG,4BAAAC,EAAA,sEChBGC,EDiBYP,ECjBHQ,MAAM,GAAD,OAHrB,oCAGqB,OAFtB,UAEsB,cAA0BD,IAC5DE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,kBAAM,IAAIC,MAAM,iBDcL,UAGU,WAFpBC,EADU,QAGHC,SAHG,uBAIdX,GAAS,GACTH,EAAe,IALD,0BAUhBC,EAASY,GACTV,GAAS,GAXO,iCChBG,IAAAG,IDgBH,OAAH,qDA6Bf,OACE,oCACE,0BACEtB,UAAU,aACV+B,SAnBc,SAACC,GACnBA,EAAMC,iBACDlC,GAMLiB,EAAe,IACfC,EAAS,MACTE,GAAS,GAETN,EAASd,IATPoB,GAAS,KAkBP,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,QAAQkC,QAAQ,eAAjC,eAIA,yBAAKlC,UAAU,WACb,2BACEmC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrC,UAAWkB,EACP,kBACA,mBAEJoB,MAAOvB,EACPwB,SAzDc,SAACP,GAAW,IAC5BM,EAAUN,EAAMQ,OAAhBF,MAERtB,EAAesB,GACfnB,GAAS,OAyDFD,GACC,uBAAGlB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,kBACVyC,QAASrB,GAHX,iBASF,yBAAKpB,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,qBAFZ,uBAUJkB,GACA,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCD,GAAU,kBAAC,EAAD,CAAWA,MAAOA,QEpG1B2C,EAAM,WAAO,IAAD,EACK5B,mBAAS,IADd,mBAChBL,EADgB,KACRkC,EADQ,KAWvB,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACZS,EAAOmC,OAAS,GAAM,kBAAC,EAAD,CAAYnC,OAAQA,KAE7C,yBAAKT,UAAU,WACb,kBAAC,EAAD,CAAWa,SAdA,SAACgC,GACZpC,EAAOqC,MAAK,SAAA/C,GAAK,OAAIA,EAAMQ,SAAWsC,EAAgBtC,WAI1DoC,EAAU,GAAD,mBAAKlC,GAAL,CAAaoC,WCR1BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5098bf3d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.Plot}\n        <br />\n        <a href={movie.imdbID}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string.isRequired,\n    Poster: PropTypes.string.isRequired,\n    Plot: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbID: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} movie={movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleSearchQuery = (event) => {\n    const { value } = event.target;\n\n    setSearchQuery(value);\n    setError(false);\n  };\n\n  const findMovie = async() => {\n    const newMovie = await request(searchQuery);\n\n    if (newMovie.Response === 'False') {\n      setError(true);\n      setSearchQuery('');\n\n      return;\n    }\n\n    setMovie(newMovie);\n    setError(false);\n  };\n\n  const addNewMovie = (event) => {\n    event.preventDefault();\n    if (!movie) {\n      setError(true);\n\n      return;\n    }\n\n    setSearchQuery('');\n    setMovie(null);\n    setError(false);\n\n    addMovie(movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={addNewMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={error\n                ? 'input is-danger'\n                : 'input is-success'\n              }\n              value={searchQuery}\n              onChange={handleSearchQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {!error && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && (<MovieCard movie={movie} />)}\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const baseURL = 'https://www.omdbapi.com/?apikey=';\nconst apiKey = 'fb5e9d6';\n\nexport const request = title => fetch(`${baseURL}${apiKey}&t=${title}`)\n  .then(response => response.json())\n  .catch(() => new Error('Failed key'));\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovie = (movieFromSearch) => {\n    if (movies.some(movie => movie.imdbID === movieFromSearch.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, movieFromSearch]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length > 0 && (<MoviesList movies={movies} />)}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}